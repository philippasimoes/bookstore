version: "2.1"

services:
  bookstore-db:
    container_name: bookstore-db
    image: postgres:latest
    restart: always
    ports:
      - "172.25.141.121:5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=bookstore-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "bookstore-db"]
      interval: 30s
      timeout: 60s
      retries: 5
    networks:
      - bookstore-network

  catalog-service:
    image: 'catalog-service:latest'
    build:
      context: ./CatalogService
      dockerfile: Dockerfile
    restart: always
    container_name: catalog-service
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - POSTGRES_HOST=bookstore-db
      - POSTGRES_USER=postgres
    depends_on:
      bookstore-db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    healthcheck:
      test: "exit 0"
      interval: 5s
    networks:
      - bookstore-network

  stock-service:
    image: 'stock-service:latest'
    build:
      context: ./StockService
      dockerfile: Dockerfile
    restart: always
    container_name: stock-service
    ports:
      - "10000:10000"
      - "8083:8083"
    environment:
      - POSTGRES_HOST=bookstore-db
      - POSTGRES_USER=postgres
    depends_on:
      bookstore-db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    healthcheck:
      test: "exit 0"
      interval: 5s
    networks:
      - bookstore-network

  rabbitmq:
    container_name: rabbitmq
    image: 'rabbitmq:3.13.0-rc.5-management'
    ports:
      # The standard AMQP protocol port
      - '172.25.141.121:5672:5672'
      # HTTP management UI
      - '15672:15672' #Management Port - default user:pass = guest:guest
    networks:
      - bookstore-network

networks:
  bookstore-network: