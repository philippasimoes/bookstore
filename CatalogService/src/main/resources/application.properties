spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://bookstore-db:5432/bookstore-db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.liquibase.change-log=classpath:db/changelog-master.xml
spring.jpa.properties.hibernate.default_schema=catalogservice
javax.persistence.schema-generation.database.action=drop-and-create

spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
rabbitmq.queue.event.updated.name=stock_updated
rabbitmq.queue.event.soldout.name=stock_soldout
rabbitmq.exchange.name=stock_exchange
rabbitmq.routing.key=stock_routing_key

logging.file.path=CatalogService/log
logging.file.name=${logging.file.path}/catalog-service.log

#okta.oauth2.issuer=https://dev-7rdbxrfm0hk13388.us.auth0.com/
#okta.oauth2.client-id=A7LOMf8sOBq9aKdJW8hcqzbSP5VBGnHV
#okta.oauth2.client-secret=JYkPY0vv4BuYLENuCX69kkNBJo1Ry9KgvSPfipR5850odtVKYKOyO8d3PRrEumji
#okta.oauth2.audience=http://localhost:8080

#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-7rdbxrfm0hk13388.us.auth0.com/
#spring.security.oauth2.resourceserver.jwt.audiences=http://localhost:8080

api.security.token.secret=${JWT_SECRET:JYkPY0vv4BuYLENuCX69kkNBJo1Ry9KgvSPfipR5850odtVKYKOyO8d3PRrEumji}